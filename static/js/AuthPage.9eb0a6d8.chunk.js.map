{"version":3,"file":"static/js/AuthPage.9eb0a6d8.chunk.js","mappings":"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","sources":["components/recentEmail/recentEmail.js","components/authForm/AuthForm.jsx","pages/authPage/AuthPage.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\n// const apiUrl = process.env.REACT_APP_API_URL;\nconst formData = JSON.parse(localStorage.getItem('formData'));\n\nconst handleClick = async () => {\n  const requestData = { email: `${formData.email}` };\n\n  await axios\n    .post(`http://localhost:8080/api/users/verify`, requestData)\n    .then(response => {\n      toast.success(response.data.message);\n      console.log(response.data);\n    })\n    .catch(error => {\n      toast.error('Verification has already been passed');\n      console.error(error.message);\n    });\n};\n\nexport const RecentEmail = () => {\n  return (\n    <>\n      <Button\n        onClick={handleClick}\n        fullWidth\n        variant=\"contained\"\n        sx={{ mt: 3, mb: 2 }}\n      >\n        Recent Email\n      </Button>\n    </>\n  );\n};\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useState, useEffect } from 'react';\nimport { useLoginMutation, useSignupMutation } from 'redux/auth/authApi';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport desktop from '../../components/images/desktop.jpg';\nimport { RecentEmail } from 'components/recentEmail';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst defaultTheme = createTheme();\n\nexport function AuthForm() {\n  const navigate = useNavigate();\n  const [showRegister, setShowRegister] = useState(false);\n\n  const [\n    login,\n    { isSuccess: isLoginSuccess, isError: isLoginError, error: loginError },\n  ] = useLoginMutation();\n\n  const [\n    signup,\n    { isSuccess: isSignupSucees, isError: isSignupError, error: signupError },\n  ] = useSignupMutation();\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    const form = event.target;\n    const email = form.email.value;\n    const password = form.password.value;\n\n    if (email && password) {\n      try {\n        await login({ email, password });\n      } catch (error) {\n        toast.error(error.data.message);\n      }\n    } else {\n      toast.error('Please fill all Fields');\n    }\n    form.reset();\n  };\n\n  const handleSignup = async event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const name = form.name.value;\n    const email = form.email.value;\n    const password = form.password.value;\n    const subscription = form.subscription.value;\n\n    if (name && email && password && subscription) {\n      try {\n        await signup({ name, email, password, subscription });\n        localStorage.setItem(\n          'formData',\n          JSON.stringify({ name, email, password, subscription })\n        );\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      toast.error('Please fill all Fields');\n    }\n  };\n\n  useEffect(() => {\n    if (isLoginSuccess) {\n      toast.success('Login success');\n      navigate('/contacts');\n    }\n\n    if (isSignupSucees) {\n      toast.success('Signup success. Verify you email');\n    }\n  }, [isLoginSuccess, isLoginError, loginError, isSignupSucees, navigate]);\n\n  useEffect(() => {\n    if (isLoginError) {\n      toast.error(loginError?.data.message);\n    }\n    if (isSignupError) {\n      toast.error(signupError?.data.message);\n    }\n  }, [isLoginError, loginError, isSignupError, signupError]);\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid\n        container\n        component=\"main\"\n        sx={{\n          height: '100vh',\n          marginLeft: '20px',\n          marginRight: '20px',\n        }}\n      >\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: `url(${desktop})`,\n            // backgroundImage:\n            //   'url(https://source.unsplash.com/random?wallpapers)',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: `left top`,\n            height: '100%',\n            width: '300px',\n            backgroundColor: t =>\n              t.palette.mode === 'light'\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: 'cover',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              {!showRegister ? 'Login' : 'Register'}\n            </Typography>\n            <p className=\"text-blue-50 mb-4\">\n              {!setShowRegister\n                ? 'Please enter your email & password'\n                : 'Please enter user detail'}\n            </p>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={showRegister ? handleSignup : handleLogin}\n              sx={{ mt: 1 }}\n            >\n              {showRegister && (\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"name \"\n                  name=\"name\"\n                  autoComplete=\"name\"\n                  autoFocus\n                />\n              )}\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              {showRegister && (\n                <div>\n                  <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"confirmPassword\"\n                    label=\"Confirm password\"\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    autoComplete=\"current-password\"\n                  />\n                  <FormControl>\n                    <FormLabel id=\"demo-row-radio-buttons-group-label\">\n                      Choose your account type\n                    </FormLabel>\n                    <RadioGroup\n                      row\n                      aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                      name=\"row-radio-buttons-group\"\n                      defaultValue=\"starter\"\n                    >\n                      <FormControlLabel\n                        value=\"pro\"\n                        name=\"subscription\"\n                        control={<Radio />}\n                        label=\"Pro\"\n                      />\n                      <FormControlLabel\n                        value=\"starter\"\n                        name=\"subscription\"\n                        control={<Radio />}\n                        label=\"Starter\"\n                      />\n                      <FormControlLabel\n                        value=\"business\"\n                        name=\"subscription\"\n                        control={<Radio />}\n                        label=\"Business\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </div>\n              )}\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {!showRegister ? 'Login' : 'Sign In'}\n              </Button>\n              {showRegister && <RecentEmail />}\n              <Grid container>\n                <Grid item>\n                  {!showRegister ? (\n                    <>\n                      Don't have an account?\n                      <p\n                        className=\"text-blue-50 fw-bold\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => setShowRegister(true)}\n                      >\n                        Signup\n                      </p>\n                    </>\n                  ) : (\n                    <>\n                      Already have an account?\n                      <p\n                        className=\"text-blue-50 fw-bold\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => setShowRegister(false)}\n                      >\n                        Login\n                      </p>\n                    </>\n                  )}\n                </Grid>\n              </Grid>\n\n              <Copyright sx={{ mt: 5 }} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { AuthForm } from 'components/authForm';\n\nconst AuthPage = () => {\n  return (\n    <Box>\n      <Typography\n        sx={{ typography: { xs: 'h3', lg: 'h1' } }}\n        component=\"h1\"\n        color=\"#1976d2\"\n      >\n        Welcome to <br />\n      </Typography>\n      <AuthForm />\n    </Box>\n  );\n};\n\nexport default AuthPage;\n"],"names":["formData","JSON","parse","localStorage","getItem","handleClick","requestData","email","axios","then","response","toast","data","message","console","log","catch","error","RecentEmail","Button","onClick","fullWidth","variant","sx","mt","mb","Copyright","props","Typography","color","align","Date","getFullYear","defaultTheme","createTheme","AuthForm","navigate","useNavigate","useState","showRegister","setShowRegister","useLoginMutation","login","isLoginSuccess","isSuccess","isLoginError","isError","loginError","useSignupMutation","signup","isSignupSucees","isSignupError","signupError","handleLogin","event","preventDefault","form","target","value","password","reset","handleSignup","name","subscription","setItem","stringify","useEffect","ThemeProvider","theme","Grid","container","component","height","marginLeft","marginRight","CssBaseline","item","xs","sm","md","backgroundImage","desktop","backgroundRepeat","backgroundPosition","width","backgroundColor","t","palette","mode","grey","backgroundSize","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","className","noValidate","onSubmit","TextField","margin","required","id","label","autoComplete","autoFocus","type","FormControl","FormLabel","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","style","cursor","typography","lg"],"sourceRoot":""}